- hosts: all
  sudo: yes
  vars:
    - logpath: /var/log/mysqld.log
    - dbrootpassword: root
    - dbname: sample
    - dbuser: suzuki
    - dbpassword: suzuki
    - host_items:
      - '10.11.22.101\tdb1.localnet'
      - '10.11.22.102\tdb2.localnet'
  tasks:

    #
    # hostnameを使用する（ログファイルにhostnameを使用するため）
    #
    - name: change hostname
      shell: |
        sed -i -e 's/\(HOSTNAME=\).*/\1db{{ ansible_eth1["ipv4"]["address"][-1:] }}.localnet/g' /etc/sysconfig/network
        hostname db{{ ansible_eth1["ipv4"]["address"][-1:] }}.localnet
      tags: init

    #
    # hostnameがレプリケーションに使用され、接続できずにエラーになる。
    # そのため、/etc/hostsを書き換えて対応しておく。
    #
    - name: change /etc/hosts
      shell: |
        sed -i '/^{{ item }}$/d' /etc/hosts
        echo -e '{{ item }}' >> /etc/hosts
      with_items: host_items
      tags: init

    # MySQLリポジトリの追加
    - name: install mysql repo
      yum: name={{ item }} state=present
      with_items:
         - http://dev.mysql.com/get/mysql57-community-release-el6-7.noarch.rpm
      tags: mysqld

    # MySQLインストール
    - name: install mysqld
      yum: name={{ item }} state=present
      with_items:
        - mysql-server
      tags: mysqld

    # [Plugin][Group Replication]
    - name: confirm that group-replication plug-in is present
      stat: path=/usr/lib64/mysql/plugin/group_replication.so
      register: group_replication_plugin
      tags: mysqld
    #- debug: var=group_replication_plugin.stat.exists

    # [Group Replication] plugin package download
    - name: install group-replication-plugin
      shell: |
        curl -O http://downloads.mysql.com/snapshots/pb/mysql-group-replication-0.6.0-labs/mysql-group-replication-0.6.0-dmr-linux-el6-x86-64bit.tar.gz \
        && tar xzvf mysql-group-replication-0.6.0-dmr-linux-el6-x86-64bit.tar.gz \
        && mv mysql-group-replication-0.6.0-dmr-linux-el6-x86-64bit/lib64/mysql/plugin/group_replication.so /usr/lib64/mysql/plugin/
      when: not group_replication_plugin.stat.exists
      tags: mysqld-group-replication

    # 初回起動の判定として、ログファイルのチェックを実施
    - name: check mysqld.log
      stat: path={{ logpath }}
      register: f
      tags: mysqld
    #- debug: var=f.stat.size

    #
    # 初期化コマンド「mysql_install_db」はprovisioning toolで実行するのは
    # リスクを伴うため、あえて実行しない。（「~/.mysql_secret」が出力されない。）
    # その代わり設定ファイルの変更なしで、一旦起動させパスワードを確認する。
    #

    # 起動＆サービス登録
    - name: launch mysqld
      service: name=mysqld state=running enabled=yes
      tags: mysqld

    # 設定ファイルの変更
    - name: set my.cnf
      template: src=my.cnf dest=/etc/my.cnf
      register: configuration_file

    # mysqld restart
    - name: mysqld restart
      service: name=mysqld state=restarted
      when: configuration_file.changed
      tags: mysqld-group-replication

    # [初回起動] 自動で割り振られたパスワードを取得
    - name: get root password
      shell: |
        head /var/log/mysqld.log \
        | grep 'A temporary password is generated for root@localhost' \
        | awk -F' ' '{print $NF}'
      register: root_init_password
      when: f.stat.size == 0
      tags: mysqld
    #- debug:
    #    var: root_init_password.stdout
    #  when: root_init_password.changed
    #  tags: mysqld

    # [初回起動] パスワード変更
    - name: change root password
      shell: |
        mysql -u root -p'{{ root_init_password.stdout }}' \
              -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('{{ dbrootpassword }}')" \
              --connect-expired-password
      when: root_init_password.changed and root_init_password.stdout != ""
      tags: mysqld

    #
    # Group Replicationの設定
    #

    # check replication user
    - name: check replication user
      shell: |
        mysql -u root -p'{{ dbrootpassword }}' \
              -e "SELECT User FROM mysql.user WHERE User='rpl_user'" 2>/dev/null \
        | awk '{ if (NR % 2 == 0) print $2}' \
        | wc -l
      register: replication_user_count
      tags: mysqld
    #- debug:
    #    var: replication_user_count.stdout

    # create replication user
    - name: create replication user
      shell: |
        mysql -u root -p'{{ dbrootpassword }}' \
              -e "GRANT REPLICATION SLAVE ON *.* TO rpl_user@'%' IDENTIFIED BY 'rpl_pass';" 2>/dev/null
      when: replication_user_count.stdout == '0'
      tags: mysqld-group-replication
